/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.plasprod.Views;

import com.plasprod.JDBC.DAOSatisfaction;
import com.plasprod.Models.Commande;
import com.plasprod.Models.Enums.EditMode;
import com.plasprod.Models.Enums.NiveauSatisfaction;
import com.plasprod.Models.Satisfaction;
import com.plasprod.Models.Singleton;
import java.sql.Date;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Maxime
 */
public class VueSatisfactionEdit extends javax.swing.JFrame {
    // objet de la page
    Satisfaction satisfaction = null;
    
    // Models pour les composants
    final DefaultComboBoxModel modelComboBoxNiveauSatisfaction;
    
    /**
     * Creates new form VueSatisfactionEdit
     */
    public VueSatisfactionEdit() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        switch (Singleton.getCurrent().editModeSatisfaction) {
            case CREATION:
                satisfaction = new Satisfaction();
                break;
                
            case MODIFICATION:
                satisfaction = Singleton.getCurrent().satisfaction;
                break;
        }
        
        modelComboBoxNiveauSatisfaction = (DefaultComboBoxModel)jComboBoxNiveauSatisfaction.getModel();
        modelComboBoxNiveauSatisfaction.removeAllElements();
        
        for (NiveauSatisfaction niveauSatisfaction : NiveauSatisfaction.values()) {
            modelComboBoxNiveauSatisfaction.addElement(niveauSatisfaction);
        }
        
        if (Singleton.getCurrent().editModeSatisfaction == EditMode.MODIFICATION) {
            NiveauSatisfaction niveauSatisfaction = NiveauSatisfaction.valueOf(satisfaction.getNiveauSatisfaction().name());
            
            jComboBoxNiveauSatisfaction.setSelectedItem(niveauSatisfaction);
        }
    }
    
    private void DisplayErrors() {
        // date
        if (satisfaction.getConstraintViolations().containsKey("CommentaireIsValid")) {
            jLabelCommentaireIsValid.setIcon(new javax.swing.ImageIcon("C:\\Users\\Maxime\\Desktop\\ProjetFilRougeL2\\Documents\\NetBeansProjects\\FilRouge2\\src\\main\\java\\com\\plasprod\\Images\\deny-icon.png"));
            jLabelCommentaireIsValid.setToolTipText(satisfaction.getConstraintViolations().get("CommentaireIsValid"));
        } else {
            jLabelCommentaireIsValid.setIcon(new javax.swing.ImageIcon("C:\\Users\\Maxime\\Desktop\\ProjetFilRougeL2\\Documents\\NetBeansProjects\\FilRouge2\\src\\main\\java\\com\\plasprod\\Images\\Accept-icon.png"));
            jLabelCommentaireIsValid.setToolTipText(null);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonEnregistrer = new javax.swing.JButton();
        jButtonAnnuler = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaCommentaire = new javax.swing.JTextArea();
        jComboBoxNiveauSatisfaction = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonEnregistrer.setText("Enregistrer");
        jButtonEnregistrer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButtonEnregistrerMousePressed(evt);
            }
        });

        jButtonAnnuler.setText("Fermer");
        jButtonAnnuler.setToolTipText("");
        jButtonAnnuler.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButtonAnnulerMousePressed(evt);
            }
        });

        jLabel7.setText("Niveau");

        jLabel8.setText("Commentaire");

        jTextAreaCommentaire.setColumns(20);
        jTextAreaCommentaire.setRows(5);
        jScrollPane1.setViewportView(jTextAreaCommentaire);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(332, 332, 332)
                            .addComponent(jButtonEnregistrer)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonAnnuler)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jComboBoxNiveauSatisfaction, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jComboBoxNiveauSatisfaction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAnnuler)
                    .addComponent(jButtonEnregistrer))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEnregistrerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEnregistrerMousePressed
        Calendar _dateSatisfaction = Calendar.getInstance();
        satisfaction.setDateSatisfaction(new Date(_dateSatisfaction.getTime().getTime()));
        satisfaction.setNiveauSatisfaction((NiveauSatisfaction)jComboBoxNiveauSatisfaction.getSelectedItem());
        satisfaction.setCommentaire(jTextAreaCommentaire.getText());
        satisfaction.setIdCommande(Singleton.getCurrent().commande.getId());
        
        
        Boolean isValid = satisfaction.isValid();
        DisplayErrors();
        
        if (isValid) {
            switch (Singleton.getCurrent().editModeSatisfaction) {
                case CREATION:
                    DAOSatisfaction.ajoutSatisfaction(satisfaction);
                    break;

                case MODIFICATION:
                    DAOSatisfaction.modificationSatisfaction(satisfaction);
                    break;
            }

            this.dispose();
            Singleton.getCurrent().vueCommercial.DislayCurrentCommercial(true);
        }
    }//GEN-LAST:event_jButtonEnregistrerMousePressed

    private void jButtonAnnulerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAnnulerMousePressed
        this.dispose();
    }//GEN-LAST:event_jButtonAnnulerMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VueSatisfactionEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VueSatisfactionEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VueSatisfactionEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VueSatisfactionEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VueSatisfactionEdit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnnuler;
    private javax.swing.JButton jButtonEnregistrer;
    private javax.swing.JComboBox jComboBoxNiveauSatisfaction;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaCommentaire;
    // End of variables declaration//GEN-END:variables
}
